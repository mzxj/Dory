#!/bin/bash
# Define usage function
usage() {
    echo "Usage:"
    echo "  Dory -m <FileFormat> -a <Input1> -b <Input2> -o <OutputPath> -c <ChrNum>   # For comparing two conditions"
    echo "  Dory -m <FileFormat> -i <InputCoordFile> -l <LabelFile> -o <OutputPath> -n <LabelColname> -c <ChrNum>   # For comparing more than two conditions"
    exit 1
}

output="."
ctcolname="Cell_Type"
# Parse arguments
while [[ $# -gt 0 ]]; do
    case "$1" in
        -a) a_value="$2"; shift 2 ;;
        -b) b_value="$2"; shift 2 ;;
        -i) i_value="$2"; mode="group"; shift 2 ;;  # If -i is present, switch to group mode
        -l) l_value="$2"; mode="group"; shift 2 ;;  # If -l is present, switch to group mode
        -o) output="$2"; shift 2 ;;
        -m) file_format="$2"; shift 2 ;;
        -c) chr_format="$2"; shift 2 ;;
        -n) ctcolname="$2"; mode="group"; shift 2 ;;
        *) echo "Unknown parameter: $1"; usage ;;
    esac
done

mkdir -p "$output"

SCRIPT_DIR="$(dirname "$(realpath "$0")")"
# Call the appropriate R script
if [[ -n "$a_value" && -n "$b_value" && -z "$i_value" && -z "$l_value" ]]; then
    # Run single mode
    Rscript "$SCRIPT_DIR/R/Dory_single.R" -a "$a_value" -b "$b_value" -o "$output" -m "$file_format" -c "$chr_format"

elif [[ -n "$i_value" && -z "$a_value" && -z "$b_value" ]]; then
    # Run group mode 
    Rscript "$SCRIPT_DIR/R/Dory_group.R" -i "$i_value" -l "$l_value" -n "$ctcolname" -o "$output" -m "$file_format" -c "$chr_format"

else
    echo "Error: Invalid arguments. Use either:"
    echo "  -a <state1> -b <state2>  -m <format> # For comparing two conditions"
    echo "  -i <file> -l <file>  -m <format>     # For comparing a group of conditions"
    usage
fi